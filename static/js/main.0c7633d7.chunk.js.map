{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","pressedKey","setPressedKey","keyBoardHandler","event","key","useEffect","document","addEventListener","removeEventListener","className","type","ReactDOM","render","getElementById"],"mappings":"wMAEaA,EAAgB,WAC3B,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAkB,SAACC,GACvBF,EAAcE,EAAMC,MAStB,OANAC,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,QAASL,GAE5B,kBAAMI,SAASE,oBAAoB,QAASN,MAClD,CAACF,IAGF,sBAAKS,UAAU,MAAf,UACE,uBAAOC,KAAK,SAEXV,EACC,mBAAGS,UAAU,eAAb,4CAAyDT,EAAzD,OAEA,mBAAGS,UAAU,eAAb,yC,MCjBRE,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.0c7633d7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport const App: React.FC = () => {\n  const [pressedKey, setPressedKey] = useState('');\n\n  const keyBoardHandler = (event: KeyboardEvent) => {\n    setPressedKey(event.key);\n  };\n\n  useEffect(() => {\n    document.addEventListener('keyup', keyBoardHandler);\n\n    return () => document.removeEventListener('keyup', keyBoardHandler);\n  }, [pressedKey]);\n\n  return (\n    <div className=\"App\">\n      <input type=\"text\" />\n\n      {pressedKey ? (\n        <p className=\"App__message\">{`The last pressed key is [${pressedKey}]`}</p>\n      ) : (\n        <p className=\"App__message\">Nothing was pressed yet</p>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}